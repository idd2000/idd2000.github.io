(function(z,y){typeof exports=="object"&&typeof module<"u"?module.exports=y():typeof define=="function"&&define.amd?define(y):(z=typeof globalThis<"u"?globalThis:z||self,z.SnakeGame=y())})(this,function(){"use strict";let z={draw(i){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.snake.forEach((t,h)=>{let a=0;h!=0&&h!=this.snake.length-1&&(this.checkIfTurn(this.snake[h-1],this.snake[h+1])?(this.snake[h].namesegment||(this.snake[h].namesegment=this.getTurnTexture(this.snake[h-1],t,this.snake[h+1])),this.drawSegment(t,h,this.calculateWaist(h),this.snake[h].namesegment)):(this.snake[h].namesegment||(a=this.getRotationAngle(this.snake[h-1],t),this.snake[h].namesegment=a==0||a==Math.PI?"horizontal":"vertical"),this.drawSegment(t,h,this.calculateWaist(h),this.snake[h].namesegment)))});let e=0;e=this.getRotationAngle(this.snake[0],this.snake[1]),this.drawHead(this.snake[0],i,e),e=this.getRotationAngle(this.snake[this.snake.length-2],this.snake[this.snake.length-1]),this.drawTail(this.snake[this.snake.length-1],this.snake.length-1,this.calculateWaist(this.snake.length-1),i,e),this.ctx.drawImage(this.foodImage,this.food.x*this.gridSize,this.food.y*this.gridSize,this.gridSize,this.gridSize),this.candy&&this.ctx.drawImage(this.candyImage,this.candy.x*this.gridSize,this.candy.y*this.gridSize,this.gridSize,this.gridSize),this.rocks.forEach(t=>{this.ctx.drawImage(this.rockImage,t.x*this.gridSize,t.y*this.gridSize,this.gridSize,this.gridSize)})},drawTail(i,e,t,h=0,a=0){this.ctx.beginPath();const s=this.snake[e-1],r=this.snake[e-2],o=r&&this.checkIfTurn(r,i);if(this.not_pop_snake===0)if(o){let d=i.x>s.x&&s.y>r.y||i.y>s.y&&s.x<r.x||i.x<s.x&&s.y<r.y||i.y<s.y&&s.x>r.x;const l=Math.PI/2*h;let x=i.x*this.gridSize+(s.x>i.x||r.x>s.x?this.gridSize:0),n=i.y*this.gridSize+(s.y>i.y||r.y>s.y?this.gridSize:0);if((Math.abs(i.x-s.x)>1||Math.abs(i.y-s.y)>1||Math.abs(s.x-r.x)>1||Math.abs(s.y-r.y)>1)&&(d=!d,Math.abs(s.x-r.x)>1&&(x=x+Math.sign(s.x-r.x)*this.gridSize),Math.abs(s.y-r.y)>1&&(n=n+Math.sign(s.y-r.y)*this.gridSize),Math.abs(i.x-s.x)>1&&(x=x+Math.sign(i.x-s.x)*this.gridSize),Math.abs(i.y-s.y)>1&&(n=n+Math.sign(i.y-s.y)*this.gridSize)),this.ctx.save(),this.ctx.translate(x,n),this.ctx.rotate(a+(d?l:-l)),this.ctx.clearRect(1,d?1:-this.gridSize+1,this.gridSize,this.gridSize),this.ctx.moveTo(0,d?t:-t),this.ctx.bezierCurveTo(this.gridSize,d?t:-t,this.gridSize,d?this.gridSize-t:t-this.gridSize,0,d?this.gridSize-t:t-this.gridSize),this.ctx.restore(),Math.abs(i.x-s.x)>1||Math.abs(i.y-s.y)>1){let c=i.x>s.x&&s.y>r.y||i.y>s.y&&s.x<r.x||i.x<s.x&&s.y<r.y||i.y<s.y&&s.x>r.x;c=!c;let S=s.x*this.gridSize,g=s.y*this.gridSize;Math.abs(i.x-s.x)>1?(Math.sign(i.x-s.x)==-1&&(S+=this.gridSize),Math.sign(s.y-r.y)==-1&&(g+=this.gridSize)):Math.abs(i.y-s.y)>1&&(S=s.x*this.gridSize,g=s.y*this.gridSize,Math.sign(i.y-s.y)==-1&&(g+=this.gridSize),Math.sign(s.x-r.x)==-1&&(S+=this.gridSize)),this.ctx.save(),this.ctx.translate(S,g),this.ctx.rotate(a+(c?l:-l)),this.ctx.clearRect(1,c?1:-this.gridSize+1,this.gridSize,this.gridSize),this.ctx.moveTo(0,c?t:-t),this.ctx.bezierCurveTo(this.gridSize,c?t:-t,this.gridSize,c?this.gridSize-t:t-this.gridSize,0,c?this.gridSize-t:t-this.gridSize),this.ctx.restore()}}else this.applyStraightTransformation(i,a,h,t),this.drawTailWithWall(i,s,a,h,t);else this.applyStraightTransformation(i,a,0,t),this.drawTailWithWall(i,s,a,h,t);this.ctx.fillStyle=this.fillStyle,this.ctx.fill(),this.ctx.closePath()},applyStraightTransformation(i,e,t,h){this.ctx.save();let a=i.x*this.gridSize,s=i.y*this.gridSize;e<0?s+=this.gridSize+this.gridSize*t:e>1&&e<2?(a+=this.gridSize,s-=this.gridSize*t):e===0?a-=this.gridSize*t:e>3&&e<4&&(a+=this.gridSize+this.gridSize*t,s+=this.gridSize),this.ctx.translate(a,s),this.ctx.rotate(e),this.ctx.clearRect(1,1,this.gridSize,this.gridSize),this.ctx.moveTo(0,h),this.ctx.bezierCurveTo(this.gridSize,h,this.gridSize,this.gridSize-h,0,this.gridSize-h),this.ctx.restore()},drawTailWithWall(i,e,t,h,a){if(Math.abs(i.x-e.x)>1||Math.abs(i.y-e.y)>1){this.ctx.save();let s=e.x*this.gridSize,r=e.y*this.gridSize;t<0?r+=this.gridSize*h:t>1&&t<2?(s+=this.gridSize,r-=this.gridSize*h-this.gridSize):t===0?s-=this.gridSize*h-this.gridSize:t>3&&t<4&&(s+=this.gridSize*h,r+=this.gridSize),this.ctx.translate(s,r),this.ctx.rotate(t),this.ctx.clearRect(1,1,this.gridSize,this.gridSize),this.ctx.moveTo(0,a),this.ctx.bezierCurveTo(this.gridSize,a,this.gridSize,this.gridSize-a,0,this.gridSize-a),this.ctx.restore()}},drawSegment(i,e,t,h,a=0,s=0){let r,o,d;this.snake[e+1].x<i.x?r="left":this.snake[e+1].x>i.x?r="right":this.snake[e+1].y<i.y?r="top":this.snake[e+1].y>i.y&&(r="bottom"),o=t,d=this.calculateWaist(e+1),this.ctx.beginPath(),h=="horizontal"?(r=="left"&&(o=this.calculateWaist(e+1),d=t),this.ctx.moveTo(i.x*this.gridSize,i.y*this.gridSize+o),this.ctx.lineTo(i.x*this.gridSize+this.gridSize,i.y*this.gridSize+d),this.ctx.lineTo(i.x*this.gridSize+this.gridSize,i.y*this.gridSize+this.gridSize-d),this.ctx.lineTo(i.x*this.gridSize,i.y*this.gridSize+this.gridSize-o)):h=="vertical"?(r=="top"&&(o=this.calculateWaist(e+1),d=t),this.ctx.moveTo(i.x*this.gridSize+o,i.y*this.gridSize),this.ctx.lineTo(i.x*this.gridSize+d,i.y*this.gridSize+this.gridSize),this.ctx.lineTo(i.x*this.gridSize+this.gridSize-d,i.y*this.gridSize+this.gridSize),this.ctx.lineTo(i.x*this.gridSize+this.gridSize-o,i.y*this.gridSize)):h=="bottomright"?(r=="right"&&(o=this.calculateWaist(e+1),d=t),this.ctx.moveTo(i.x*this.gridSize+this.gridSize,i.y*this.gridSize+o),this.ctx.arcTo(i.x*this.gridSize+d,i.y*this.gridSize+d,i.x*this.gridSize+d,i.y*this.gridSize+this.gridSize,this.gridSize-d),this.ctx.lineTo(i.x*this.gridSize+this.gridSize-d,i.y*this.gridSize+this.gridSize),this.ctx.arcTo(i.x*this.gridSize+this.gridSize-o,i.y*this.gridSize+this.gridSize-o,i.x*this.gridSize+this.gridSize,i.y*this.gridSize+this.gridSize-o,o)):h=="bottomleft"?(r=="left"&&(o=this.calculateWaist(e+1),d=t),this.ctx.moveTo(i.x*this.gridSize,i.y*this.gridSize+o),this.ctx.arcTo(i.x*this.gridSize+this.gridSize-d,i.y*this.gridSize+d,i.x*this.gridSize+this.gridSize-d,i.y*this.gridSize+this.gridSize,this.gridSize-d),this.ctx.lineTo(i.x*this.gridSize+d,i.y*this.gridSize+this.gridSize),this.ctx.arcTo(i.x*this.gridSize+o,i.y*this.gridSize+this.gridSize-o,i.x*this.gridSize,i.y*this.gridSize+this.gridSize-o,o)):h=="topleft"?(r=="top"&&(o=this.calculateWaist(e+1),d=t),this.ctx.moveTo(i.x*this.gridSize+this.gridSize-o,i.y*this.gridSize),this.ctx.arcTo(i.x*this.gridSize+this.gridSize-d,i.y*this.gridSize+this.gridSize-d,i.x*this.gridSize,i.y*this.gridSize+this.gridSize-d,this.gridSize-d),this.ctx.lineTo(i.x*this.gridSize,i.y*this.gridSize+d),this.ctx.arcTo(i.x*this.gridSize+o,i.y*this.gridSize+o,i.x*this.gridSize+o,i.y*this.gridSize,o)):h=="topright"&&(r=="top"&&(o=this.calculateWaist(e+1),d=t),this.ctx.save(),this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize),this.ctx.moveTo(o,0),this.ctx.arcTo(t,this.gridSize-d,this.gridSize,this.gridSize-d,this.gridSize-d),this.ctx.lineTo(this.gridSize,d),this.ctx.arcTo(this.gridSize-o,o,this.gridSize-o,0,o),this.ctx.restore()),this.ctx.fillStyle=this.fillStyle,this.ctx.fill(),this.ctx.closePath()},drawHead(i,e=0,t=0){let h=this.headTexture;if(this.snake[2]&&this.checkIfTurn(i,this.snake[2])){this.ctx.save();let a=Math.PI/2*e,s,r;if(t<0?r="bottom":t>1&&t<2?r="top":t==0?r="left":t>3&&t<4&&(r="right"),r=="left"||r=="right"?(this.snake[2].y<i.y&&(s=i.y-this.snake[2].y==1?"top":"bottom"),this.snake[2].y>i.y&&(s=this.snake[2].y-i.y==1?"bottom":"top")):(this.snake[2].x<i.x&&(s=i.x-this.snake[2].x==1?"right":"left"),this.snake[2].x>i.x&&(s=this.snake[2].x-i.x==1?"left":"right")),s=="bottom"&&r=="right"||s=="top"&&r=="left"||s=="left"&&r=="top"||s=="right"&&r=="bottom"?(s=="bottom"&&this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize+this.gridSize),s=="top"&&this.ctx.translate(i.x*this.gridSize+this.gridSize,i.y*this.gridSize),s=="left"&&this.ctx.translate(i.x*this.gridSize+this.gridSize,i.y*this.gridSize+this.gridSize),s=="right"&&this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize),this.ctx.rotate(t-Math.PI/2+a),this.ctx.clearRect(-this.gridSize-1,-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,-this.gridSize,0,this.gridSize,this.gridSize)):(s=="bottom"&&this.ctx.translate(i.x*this.gridSize+this.gridSize,i.y*this.gridSize+this.gridSize),s=="top"&&this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize),s=="left"&&this.ctx.translate(i.x*this.gridSize+this.gridSize,i.y*this.gridSize),s=="right"&&this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize+this.gridSize),this.ctx.rotate(t+Math.PI/2-a),this.ctx.clearRect(-this.gridSize-1,-this.gridSize-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,-this.gridSize,-this.gridSize,this.gridSize,this.gridSize)),this.ctx.restore(),this.isMoveThroughWall(i,this.snake[1])){this.ctx.save();let d;r=="left"||r=="right"?(this.snake[2].y<this.snake[1].y&&(d="top"),this.snake[2].y>this.snake[1].y&&(d="bottom")):(this.snake[2].x<this.snake[1].x&&(d="right"),this.snake[2].x>this.snake[1].x&&(d="left")),d=="bottom"&&r=="right"||d=="top"&&r=="left"||d=="left"&&r=="top"||d=="right"&&r=="bottom"?(d=="bottom"&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize,this.snake[1].y*this.gridSize+this.gridSize),d=="top"&&this.ctx.translate(this.snake[1].x*this.gridSize,this.snake[1].y*this.gridSize),d=="left"&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize,this.snake[1].y*this.gridSize),d=="right"&&this.ctx.translate(this.snake[1].x*this.gridSize,this.snake[1].y*this.gridSize+this.gridSize),this.ctx.rotate(t-Math.PI/2+a),this.ctx.clearRect(-this.gridSize-1,-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,-this.gridSize,0,this.gridSize,this.gridSize)):(d=="bottom"&&this.ctx.translate(this.snake[1].x*this.gridSize,this.snake[1].y*this.gridSize+this.gridSize),d=="top"&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize,this.snake[1].y*this.gridSize),d=="left"&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize,this.snake[1].y*this.gridSize+this.gridSize),d=="right"&&this.ctx.translate(this.snake[1].x*this.gridSize,this.snake[1].y*this.gridSize),this.ctx.rotate(t+Math.PI/2-a),this.ctx.clearRect(-this.gridSize-1,-this.gridSize-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,-this.gridSize,-this.gridSize,this.gridSize,this.gridSize)),this.ctx.restore()}}else{this.ctx.save();let a=this.gridSize*e;if(t<0?this.ctx.translate(i.x*this.gridSize,i.y*this.gridSize+a):t>1&&t<2?this.ctx.translate(i.x*this.gridSize+this.gridSize,i.y*this.gridSize-a+this.gridSize):t==0?this.ctx.translate(i.x*this.gridSize+this.gridSize-a,i.y*this.gridSize):t>3&&t<4&&this.ctx.translate(i.x*this.gridSize+a,i.y*this.gridSize+this.gridSize),this.ctx.rotate(t),this.ctx.clearRect(-1,-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,0,0,this.gridSize,this.gridSize),this.ctx.restore(),this.isMoveThroughWall(i,this.snake[1])){this.ctx.save();let s=this.gridSize*e;i.x==0&&this.snake[1].x==this.canvasWidth-1&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize+s,this.snake[1].y*this.gridSize+this.gridSize),i.x==this.canvasWidth-1&&this.snake[1].x==0&&this.ctx.translate(this.snake[1].x*this.gridSize-s,this.snake[1].y*this.gridSize),i.y==0&&this.snake[1].y==this.canvasHeight-1&&this.ctx.translate(this.snake[1].x*this.gridSize,this.snake[1].y*this.gridSize+this.gridSize+s),i.y==this.canvasHeight-1&&this.snake[1].y==0&&this.ctx.translate(this.snake[1].x*this.gridSize+this.gridSize,this.snake[1].y*this.gridSize-s),this.ctx.rotate(t),this.ctx.clearRect(-1,-1,this.gridSize,this.gridSize),this.ctx.drawImage(h,0,0,this.gridSize,this.gridSize),this.ctx.restore()}}},isMoveThroughWall(i,e){return i.x==0&&e.x==this.canvasWidth-1||i.x==this.canvasWidth-1&&e.x==0||i.y==0&&e.y==this.canvasHeight-1||i.y==this.canvasHeight-1&&e.y==0},calculateWaist(i){let e=this.snake.length-1,t=this.gridSize*.75,h=this.gridSize*.5,a=t;for(let s=0;s<e;s++)a=a-.25;return a>h&&(h=a),this.gridSize*.125+(t-h)/2/e*i},getRotationAngle(i,e){if(!e)return 0;let t=e.x-i.x,h=e.y-i.y;return t<-1&&(t=1),t>1&&(t=-1),h<-1&&(h=1),h>1&&(h=-1),t===1?0:t===-1?Math.PI:h===1?Math.PI/2:h===-1?-Math.PI/2:0},checkIfTurn(i,e){return i.x!==e.x&&i.y!==e.y},getTurnTexture(i,e,t){let h=e.x-i.x,a=e.y-i.y,s=t.x-e.x,r=t.y-e.y;if(Math.abs(h)>1&&(h=-h/Math.abs(h)),Math.abs(a)>1&&(a=-a/Math.abs(a)),Math.abs(s)>1&&(s=-s/Math.abs(s)),Math.abs(r)>1&&(r=-r/Math.abs(r)),a===1&&s===-1||h==1&&r==-1)return"topleft";if(a===-1&&s===-1||h==1&&r==1)return"bottomleft";if(a===1&&s===1||h==-1&&r==-1)return"topright";if(a===-1&&s===1||h==-1&&r==1)return"bottomright"},random(i,e){return Math.floor(Math.random()*e)+i},generateHexColor(){return`#${this.random(0,255).toString(16).padStart(2,"0")}${this.random(0,255).toString(16).padStart(2,"0")}${this.random(0,255).toString(16).padStart(2,"0")}`}};class y{constructor(e,t,h){this.grid=e,this.snake=t,this.rocks=h}isCellAvailable(e,t){const h=(e+this.grid.width)%this.grid.width,a=(t+this.grid.height)%this.grid.height;return!this.snake.some(s=>s.x===h&&s.y===a)&&!this.rocks.some(s=>s.x===h&&s.y===a)}evaluateSpace(e,t){const h=[{x:e,y:t}],a=new Set([`${e},${t}`]);let s=0;for(;h.length>0&&s<10;){const{x:r,y:o}=h.shift();s++;const d=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}];for(const l of d){const x=(r+l.x+this.grid.width)%this.grid.width,n=(o+l.y+this.grid.height)%this.grid.height,c=`${x},${n}`;this.isCellAvailable(x,n)&&!a.has(c)&&(a.add(c),h.push({x,y:n}))}}return s}isPathSafe(e,t,h=20){if(h<=0)return!0;const a=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}];for(const s of a){const r=(e+s.x+this.grid.width)%this.grid.width,o=(t+s.y+this.grid.height)%this.grid.height;if(this.isCellAvailable(r,o)&&this.isPathSafe(r,o,h-1))return!0}return!1}findSafePath(e,t){const h=this.snake[0],a=[{x:h.x,y:h.y,path:[]}],s=new Set([`${h.x},${h.y}`]);let r=[];for(;a.length>0;){const{x:o,y:d,path:l}=a.shift();if((o===e.x&&d===e.y||t&&o===t.x&&d===t.y)&&this.evaluateSpace(o,d)>=5&&this.isPathSafe(o,d))return l.length>0?l[0]:null;r=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}].map(n=>{const c=(o+n.x+this.grid.width)%this.grid.width,S=(d+n.y+this.grid.height)%this.grid.height,g=`${c},${S}`;return this.isCellAvailable(c,S)&&!s.has(g)?{dir:n,newX:c,newY:S,space:this.evaluateSpace(c,S)}:null}).filter(n=>n!==null).sort((n,c)=>c.space-n.space);for(const n of r){const{dir:c,newX:S,newY:g}=n,u=`${S},${g}`;s.add(u),a.push({x:S,y:g,path:[...l,c]})}}return r.length>0?r[0].dir:null}}class f{constructor(e){this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.gridSize=32,this.canvasWidth=this.canvas.width/this.gridSize,this.canvasHeight=this.canvas.height/this.gridSize,this.foodImage=new Image,this.foodImage.src="img/apple.png",this.rockImage=new Image,this.rockImage.src="img/rock.png",this.candyImage=new Image,this.candyImage.src="img/candy.png",this.headTexture=new Image,this.headTexture.src="img/head_left.png",this.is_end_game=!1,this.fillStyle="#0D8AFD",this.score=0,this.scoreObj=document.querySelector("#score"),this.candy=null,this.rocks=[],this.snake=[{x:10,y:10},{x:9,y:10},{x:8,y:10}],this.direction={x:1,y:0},this.lastUpdateTime=0,this.not_pop_snake=3,this.lock_changeDir=!1,this.autopilot=!1,this.snakeAI=new y({width:this.canvasWidth,height:this.canvasHeight},this.snake,this.rocks),this.removerCandy=null,this.food=null,this.food=this.getRandomPosition(),this.leftButton=document.getElementById("button_left"),this.upButton=document.getElementById("button_up"),this.downButton=document.getElementById("button_down"),this.rightButton=document.getElementById("button_right"),this.autopilot_button=document.getElementById("autopilot_button"),this.reset_button=document.getElementById("reset_button"),this.game_menu=document.getElementById("game_menu"),this.score_in_menu=document.getElementById("score_in_menu"),this.record_in_menu=document.getElementById("record_in_menu"),this.difficulty_select=document.getElementById("difficulty"),this.difficulty=Number(this.difficulty_select.value),this.leftButton.addEventListener("click",()=>{this.buttonsControls({x:-1,y:0})}),this.upButton.addEventListener("click",()=>{this.buttonsControls({x:0,y:-1})}),this.downButton.addEventListener("click",()=>{this.buttonsControls({x:0,y:1})}),this.rightButton.addEventListener("click",()=>{this.buttonsControls({x:1,y:0})}),this.autopilot_button.addEventListener("click",()=>{this.autopilot=!this.autopilot,this.autopilot?this.autopilot_button.innerHTML="Выключить автопилот":this.autopilot_button.innerHTML="Включить автопилот",this.updateButtons()}),this.reset_button.addEventListener("click",()=>{this.resetGame()}),this.difficulty_select.addEventListener("change",t=>{this.difficulty=Number(t.target.value)}),this.main=this.main.bind(this),this.changeDirection=this.changeDirection.bind(this),window.addEventListener("keydown",t=>this.changeDirection(t)),window.requestAnimationFrame(t=>this.main(t))}snakeSpeed(){return 5+this.difficulty+Math.trunc(this.score/2)*.5}main(e){if(window.requestAnimationFrame(t=>this.main(t)),!this.is_end_game){const t=(e-this.lastUpdateTime)/1e3;t>=1/this.snakeSpeed()&&(this.lastUpdateTime=e,(this.direction.x!=0||this.direction.y!=0)&&this.update());let h=t/(1/this.snakeSpeed());this.draw(h>=1?0:h)}}spawnRocks(){let e=Math.trunc(this.score/5)*this.difficulty;if(this.rocks.length<e){let t=e-this.rocks.length;for(let h=0;h<t;h++)this.rocks.push(this.getRandomPosition())}this.snakeAI.rocks=this.rocks}getRandomPosition(){let e=[];for(let h=0;h<this.canvasWidth;h++)for(let a=0;a<this.canvasHeight;a++){let s=this.snake.filter(r=>h==r.x&&a==r.y).length==0&&this.rocks.filter(r=>h==r.x&&a==r.y).length==0;this.candy&&this.candy.x==h&&this.candy.y==a&&(s=!1),this.food&&this.food.x==h&&this.food.y==a&&(s=!1),s&&e.push({x:h,y:a})}return e[Math.floor(Math.random()*(e.length-1))]}update(){let e=!1;if(this.autopilot){const a=this.snakeAI.findSafePath(this.food,this.candy);a&&(this.direction=a)}const t={...this.snake[0]};t.x+=this.direction.x,t.y+=this.direction.y,t.x<0&&(t.x=this.canvasWidth-1),t.x>=this.canvasWidth&&(t.x=0),t.y<0&&(t.y=this.canvasHeight-1),t.y>=this.canvasHeight&&(t.y=0);let h=Math.random();this.candy==null&&h<.005&&(this.candy=this.getRandomPosition(),this.removerCandy=setTimeout(()=>{this.candy=null},1e4)),this.candy&&t.x===this.candy.x&&t.y===this.candy.y&&(this.removerCandy&&clearTimeout(this.removerCandy),this.candy=null,this.not_pop_snake=4,this.score+=2,this.scoreObj.innerHTML=this.score,this.spawnRocks()),t.x===this.food.x&&t.y===this.food.y&&(e=!0,this.score+=1,this.scoreObj.innerHTML=this.score,this.not_pop_snake=2,this.food=this.getRandomPosition(),this.spawnRocks()),!e&&this.not_pop_snake==0?this.snake.pop():this.not_pop_snake=this.not_pop_snake-1,(t.x<0||t.x>=this.canvasWidth||t.y<0||t.y>=this.canvasHeight||this.rocks.some((a,s)=>a.x===t.x&&a.y===t.y)||this.snake.some((a,s)=>s>0&&a.x===t.x&&a.y===t.y))&&this.endGame(),this.snake.unshift(t),this.lock_changeDir=!1,this.snakeAI.snake=this.snake}endGame(){this.is_end_game=!0,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.score_in_menu.innerHTML=this.score,Number(this.record_in_menu.innerHTML)<this.score&&(this.record_in_menu.innerHTML=this.score),this.game_menu.style.display="flex"}resetGame(){this.is_end_game=!1,this.candy=null,this.rocks=[],this.direction={x:1,y:0},this.snake=[{x:10,y:10},{x:9,y:10},{x:8,y:10}],this.not_pop_snake=3,this.food=this.getRandomPosition(),this.score=0,this.scoreObj.innerHTML=this.score,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.updateButtons(),this.game_menu.style.display="none"}changeDirection(e){if(this.lock_changeDir==!1&&!this.autopilot){const t=e.key,{x:h,y:a}=this.direction;t==="ArrowUp"&&a===0&&(this.direction={x:0,y:-1}),t==="ArrowDown"&&a===0&&(this.direction={x:0,y:1}),t==="ArrowLeft"&&h===0&&(this.direction={x:-1,y:0}),t==="ArrowRight"&&h===0&&(this.direction={x:1,y:0}),this.lock_changeDir=!0,this.updateButtons()}}buttonsControls(e){if(!this.autopilot){const{x:t,y:h}=this.direction;this.lock_changeDir==!1&&(t===0&&e.x!=0||h===0&&e.y!=0)&&(this.direction=e,this.lock_changeDir=!0,this.updateButtons())}}updateButtons(){this.direction.x!=0&&(this.leftButton.style.display="none",this.rightButton.style.display="none",this.upButton.style.display="block",this.downButton.style.display="block"),this.direction.y!=0&&(this.leftButton.style.display="block",this.rightButton.style.display="block",this.upButton.style.display="none",this.downButton.style.display="none")}}return Object.assign(f.prototype,z),f});
